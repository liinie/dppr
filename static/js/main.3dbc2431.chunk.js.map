{"version":3,"sources":["assets/spaceship.svg","assets/negative_sound.mp3","assets/positive_sound.mp3","serviceWorker.js","IntroPage.js","components/Square.js","components/Board.js","components/AddScore.js","components/RankList.js","components/LogFile.js","components/Sidebar.js","GamePage.js","GameOverPage.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","IntroPage","react_default","a","createElement","className","src","spaceShipLogo","alt","Link","to","Component","Square","this","props","value","React","Board","_this","board","Array","fill","map","x","row","i","key","col","j","current_state_row","current_state_col","components_Square","end_state_row","end_state_col","style","textAlign","paddingLeft","margin","width","cellSpacing","AddScore","scoreColor","score","color","RankList","totalStep","FakeData","data","listStyleType","id","name","scoreData","index","LogFile","jsObj","JSON","stringify","keyPressHist","hiddenElement","document","href","encodeURIComponent","target","download","click","getLogFile","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","isIos","test","navigator","userAgent","setState","saveSidebarWidth","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","sidebar","offsetWidth","node","innerWidth","min","dragHandle","sidebarStyle","objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","root","role","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","concat","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","defaultProps","GamePage","checkEpisodeWin","next_round_board","episode_win","step","round","checkCrash","crashRate","gamma","random","crash","handleKeyPress","e","teleportationKey","charCodeAt","includes","console","log","currentKey","previousState","toConsumableArray","checkGameStatus","goal","getElementById","play","gameStatus","showCrashMessage","componentWillUnmount","episode_interrupt","sidebarOpen","onSetSidebarOpen","ms","_this2","Promise","r","setTimeout","then","addEventListener","removeEventListener","status","components_Sidebar","components_RankList","background","components_AddScore","components_Board","negative_sound","positive_sound","components_LogFile","Redirect","GameOverPage","Routes","HashRouter","Switch","Route","exact","path","component","parh","ReactDOM","render","src_Routes","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3dbc2431.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spaceship.79b8702f.svg\";","module.exports = __webpack_public_path__ + \"static/media/negative_sound.dad0bcc7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/positive_sound.13559345.mp3\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. IntroPage is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport spaceShipLogo from './assets/spaceship.svg';\nimport './IntroPage.css';\nimport {Link} from 'react-router-dom';\n\nclass IntroPage extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={spaceShipLogo} className=\"App-logo\" alt=\"logo\" />\n          <div className='empty_space'>{' '}</div>\n            <Link to='/main' className='link'>Enter Spaceship game</Link>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default IntroPage;\n","import React from \"react\";\n\nclass Square extends React.Component{\n    render(){\n        return <div className=\"square\">{this.props.value}</div>;\n    }\n}\n\nexport default Square;","import React from \"react\";\nimport Square from '../components/Square';\n\nclass Board extends React.Component{\n\n    render(){\n        const g = Array(6).fill().map(x => Array(6).fill());\n        const board = g.map((row, i) => { return (\n            <tr key={\"row_\"+i}>\n                {row.map((col, j) => {\n                    // console.log([i, j]);\n                    if (i === this.props.current_state_row && j === this.props.current_state_col) {\n                        return <Square value={'X'}/>;\n                    } else if (i === this.props.end_state_row && j === this.props.end_state_col){\n                        return <Square value={'O'}/>\n                    } else {\n                        return <Square value = {''}/>\n                    }\n                })}\n            </tr>)\n        });\n\n        return (\n            <div style={{ textAlign:'center', paddingLeft:'100px'}}>\n                <div style={{margin: 'auto', width:\"40%\"}}>\n                    <table cellSpacing=\"0\">\n                        <tbody>\n                        {board}\n                        </tbody>\n                    </table>\n                </div>\n                <br />\n            </div>\n        )\n\n    }\n}\n\nexport default Board;","import React from \"react\";\n\nclass AddScore extends React.Component {\n    render(){\n        const scoreColor = this.props.score <= 0 ? \"red\": \"green\";\n\n        return (\n            <p style={{paddingLeft: '50px'}}>Your score is:\n                <span style={{color: scoreColor}}> {this.props.score}</span></p>\n        );\n    }\n}\n\nexport default AddScore;","import React, { Component } from 'react';\nimport FakeData from '../fake_data'\n// import BestScores from './best_score_list'\n\nclass RankList extends Component {\n\n    render(){\n        return(\n            this.props.totalStep > 0 && this.props.totalStep % 10 === 0 &&\n            <div>\n                <b className=\"steps\"> at total step of {this.props.totalStep}</b>\n\n                {FakeData.map((data) =>{\n                    return (\n                        <div>\n                            <ul style={{listStyleType: \"none\"}}>\n                                <li>{data.id}: {data.name} {data.score.map((scoreData, index) =>{\n                                    if(index === ((this.props.totalStep/10) - 1))\n                                        return <span>{scoreData}</span>\n                                    }\n                                )}</li>\n                            </ul>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default RankList;","import React from \"react\";\n\nclass LogFile extends React.Component {\n\n    getLogFile(){\n        const jsObj = JSON.stringify(this.props.keyPressHist);\n\n        var hiddenElement = document.createElement(\"a\");\n        hiddenElement.href =\n            \"data:text/json;charset=utf-8,\" + encodeURIComponent(jsObj);\n        hiddenElement.target = \"_blank\";\n        hiddenElement.download = \"logfile.json\";\n        hiddenElement.click();\n    };\n\n    render(){\n        return (\n            <div>\n                {this.getLogFile()}\n            </div>\n        );\n\n    }\n}\n\nexport default LogFile;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CANCEL_DISTANCE_ON_SCROLL = 20;\n\nconst defaultStyles = {\n    root: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        overflow: \"hidden\"\n    },\n    sidebar: {\n        zIndex: 2,\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        transition: \"transform .3s ease-out\",\n        WebkitTransition: \"-webkit-transform .3s ease-out\",\n        willChange: \"transform\",\n        overflowY: \"auto\"\n    },\n    content: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        overflowY: \"auto\",\n        WebkitOverflowScrolling: \"touch\",\n        transition: \"left .3s ease-out, right .3s ease-out\"\n    },\n    overlay: {\n        zIndex: 1,\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        opacity: 0,\n        visibility: \"hidden\",\n        transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n        backgroundColor: \"rgba(0,0,0,.3)\"\n    },\n    dragHandle: {\n        zIndex: 1,\n        position: \"fixed\",\n        top: 0,\n        bottom: 0\n    }\n};\n\nclass Sidebar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // the detected width of the sidebar in pixels\n            sidebarWidth: props.defaultSidebarWidth,\n\n            // keep track of touching params\n            touchIdentifier: null,\n            touchStartX: null,\n            touchCurrentX: null,\n\n            // if touch is supported by the browser\n            dragSupported: false\n        };\n\n        this.overlayClicked = this.overlayClicked.bind(this);\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.onTouchMove = this.onTouchMove.bind(this);\n        this.onTouchEnd = this.onTouchEnd.bind(this);\n        this.onScroll = this.onScroll.bind(this);\n        this.saveSidebarRef = this.saveSidebarRef.bind(this);\n    }\n\n    componentDidMount() {\n        const isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n        this.setState({\n            dragSupported:\n            typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n        });\n        this.saveSidebarWidth();\n    }\n\n    componentDidUpdate() {\n        // filter out the updates when we're touching\n        if (!this.isTouching()) {\n            this.saveSidebarWidth();\n        }\n    }\n\n    onTouchStart(ev) {\n        // filter out if a user starts swiping with a second finger\n        if (!this.isTouching()) {\n            const touch = ev.targetTouches[0];\n            this.setState({\n                touchIdentifier: touch.identifier,\n                touchStartX: touch.clientX,\n                touchCurrentX: touch.clientX\n            });\n        }\n    }\n\n    onTouchMove(ev) {\n        if (this.isTouching()) {\n            for (let ind = 0; ind < ev.targetTouches.length; ind++) {\n                // we only care about the finger that we are tracking\n                if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n                    this.setState({\n                        touchCurrentX: ev.targetTouches[ind].clientX\n                    });\n                    break;\n                }\n            }\n        }\n    }\n\n    onTouchEnd() {\n        if (this.isTouching()) {\n            // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n            const touchWidth = this.touchSidebarWidth();\n\n            if (\n                (this.props.open &&\n                    touchWidth <\n                    this.state.sidebarWidth - this.props.dragToggleDistance) ||\n                (!this.props.open && touchWidth > this.props.dragToggleDistance)\n            ) {\n                this.props.onSetOpen(!this.props.open);\n            }\n\n            this.setState({\n                touchIdentifier: null,\n                touchStartX: null,\n                touchCurrentX: null\n            });\n        }\n    }\n\n    // This logic helps us prevents the user from sliding the sidebar horizontally\n    // while scrolling the sidebar vertically. When a scroll event comes in, we're\n    // cancelling the ongoing gesture if it did not move horizontally much.\n    onScroll() {\n        if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n            this.setState({\n                touchIdentifier: null,\n                touchStartX: null,\n                touchCurrentX: null\n            });\n        }\n    }\n\n    // True if the on going gesture X distance is less than the cancel distance\n    inCancelDistanceOnScroll() {\n        let cancelDistanceOnScroll;\n\n        if (this.props.pullRight) {\n            cancelDistanceOnScroll =\n                Math.abs(this.state.touchCurrentX - this.state.touchStartX) <\n                CANCEL_DISTANCE_ON_SCROLL;\n        } else {\n            cancelDistanceOnScroll =\n                Math.abs(this.state.touchStartX - this.state.touchCurrentX) <\n                CANCEL_DISTANCE_ON_SCROLL;\n        }\n        return cancelDistanceOnScroll;\n    }\n\n    isTouching() {\n        return this.state.touchIdentifier !== null;\n    }\n\n    overlayClicked() {\n        if (this.props.open) {\n            this.props.onSetOpen(false);\n        }\n    }\n\n    saveSidebarWidth() {\n        const width = this.sidebar.offsetWidth;\n\n        if (width !== this.state.sidebarWidth) {\n            this.setState({ sidebarWidth: width });\n        }\n    }\n\n    saveSidebarRef(node) {\n        this.sidebar = node;\n    }\n\n    // calculate the sidebarWidth based on current touch info\n    touchSidebarWidth() {\n        // if the sidebar is open and start point of drag is inside the sidebar\n        // we will only drag the distance they moved their finger\n        // otherwise we will move the sidebar to be below the finger.\n        if (this.props.pullRight) {\n            if (\n                this.props.open &&\n                window.innerWidth - this.state.touchStartX < this.state.sidebarWidth\n            ) {\n                if (this.state.touchCurrentX > this.state.touchStartX) {\n                    return (\n                        this.state.sidebarWidth +\n                        this.state.touchStartX -\n                        this.state.touchCurrentX\n                    );\n                }\n                return this.state.sidebarWidth;\n            }\n            return Math.min(\n                window.innerWidth - this.state.touchCurrentX,\n                this.state.sidebarWidth\n            );\n        }\n\n        if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n            if (this.state.touchCurrentX > this.state.touchStartX) {\n                return this.state.sidebarWidth;\n            }\n            return (\n                this.state.sidebarWidth -\n                this.state.touchStartX +\n                this.state.touchCurrentX\n            );\n        }\n        return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    render() {\n        const sidebarStyle = {\n            ...defaultStyles.sidebar,\n            ...this.props.styles.sidebar\n        };\n        const contentStyle = {\n            ...defaultStyles.content,\n            ...this.props.styles.content\n        };\n        const overlayStyle = {\n            ...defaultStyles.overlay,\n            ...this.props.styles.overlay\n        };\n        const useTouch = this.state.dragSupported && this.props.touch;\n        const isTouching = this.isTouching();\n        const rootProps = {\n            className: this.props.rootClassName,\n            style: { ...defaultStyles.root, ...this.props.styles.root },\n            role: \"navigation\",\n            id: this.props.rootId\n        };\n        let dragHandle;\n\n        const hasBoxShadow =\n            this.props.shadow && (isTouching || this.props.open || this.props.docked);\n        // sidebarStyle right/left\n        if (this.props.pullRight) {\n            sidebarStyle.right = 0;\n            sidebarStyle.transform = \"translateX(100%)\";\n            sidebarStyle.WebkitTransform = \"translateX(100%)\";\n            if (hasBoxShadow) {\n                sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n            }\n        } else {\n            sidebarStyle.left = 0;\n            sidebarStyle.transform = \"translateX(-100%)\";\n            sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n            if (hasBoxShadow) {\n                sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n            }\n        }\n\n        if (isTouching) {\n            const percentage = this.touchSidebarWidth() / this.state.sidebarWidth;\n\n            // slide open to what we dragged\n            if (this.props.pullRight) {\n                sidebarStyle.transform = `translateX(${(1 - percentage) * 100}%)`;\n                sidebarStyle.WebkitTransform = `translateX(${(1 - percentage) * 100}%)`;\n            } else {\n                sidebarStyle.transform = `translateX(-${(1 - percentage) * 100}%)`;\n                sidebarStyle.WebkitTransform = `translateX(-${(1 - percentage) *\n                100}%)`;\n            }\n\n            // fade overlay to match distance of drag\n            overlayStyle.opacity = percentage;\n            overlayStyle.visibility = \"visible\";\n        } else if (this.props.docked) {\n            // show sidebar\n            if (this.state.sidebarWidth !== 0) {\n                sidebarStyle.transform = `translateX(0%)`;\n                sidebarStyle.WebkitTransform = `translateX(0%)`;\n            }\n\n            // make space on the left/right side of the content for the sidebar\n            if (this.props.pullRight) {\n                contentStyle.right = `${this.state.sidebarWidth}px`;\n            } else {\n                contentStyle.left = `${this.state.sidebarWidth}px`;\n            }\n        } else if (this.props.open) {\n            // slide open sidebar\n            sidebarStyle.transform = `translateX(0%)`;\n            sidebarStyle.WebkitTransform = `translateX(0%)`;\n\n            // show overlay\n            overlayStyle.opacity = 1;\n            overlayStyle.visibility = \"visible\";\n        }\n\n        if (isTouching || !this.props.transitions) {\n            sidebarStyle.transition = \"none\";\n            sidebarStyle.WebkitTransition = \"none\";\n            contentStyle.transition = \"none\";\n            overlayStyle.transition = \"none\";\n        }\n\n        if (useTouch) {\n            if (this.props.open) {\n                rootProps.onTouchStart = this.onTouchStart;\n                rootProps.onTouchMove = this.onTouchMove;\n                rootProps.onTouchEnd = this.onTouchEnd;\n                rootProps.onTouchCancel = this.onTouchEnd;\n                rootProps.onScroll = this.onScroll;\n            } else {\n                const dragHandleStyle = {\n                    ...defaultStyles.dragHandle,\n                    ...this.props.styles.dragHandle\n                };\n                dragHandleStyle.width = this.props.touchHandleWidth;\n\n                // dragHandleStyle right/left\n                if (this.props.pullRight) {\n                    dragHandleStyle.right = 0;\n                } else {\n                    dragHandleStyle.left = 0;\n                }\n\n                dragHandle = (\n                    <div\n                        style={dragHandleStyle}\n                        onTouchStart={this.onTouchStart}\n                        onTouchMove={this.onTouchMove}\n                        onTouchEnd={this.onTouchEnd}\n                        onTouchCancel={this.onTouchEnd}\n                    />\n                );\n            }\n        }\n\n        return (\n            <div {...rootProps}>\n                <div\n                    className={this.props.sidebarClassName}\n                    style={sidebarStyle}\n                    ref={this.saveSidebarRef}\n                    id={this.props.sidebarId}\n                >\n                    {this.props.sidebar}\n                </div>\n                {/* eslint-disable */}\n                <div\n                    className={this.props.overlayClassName}\n                    style={overlayStyle}\n                    onClick={this.overlayClicked}\n                    id={this.props.overlayId}\n                />\n                {/* eslint-enable */}\n                <div\n                    className={this.props.contentClassName}\n                    style={contentStyle}\n                    id={this.props.contentId}\n                >\n                    {dragHandle}\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nSidebar.propTypes = {\n    // main content to render\n    children: PropTypes.node.isRequired,\n\n    // styles\n    styles: PropTypes.shape({\n        root: PropTypes.object,\n        sidebar: PropTypes.object,\n        content: PropTypes.object,\n        overlay: PropTypes.object,\n        dragHandle: PropTypes.object\n    }),\n\n    // root component optional class\n    rootClassName: PropTypes.string,\n\n    // sidebar optional class\n    sidebarClassName: PropTypes.string,\n\n    // content optional class\n    contentClassName: PropTypes.string,\n\n    // overlay optional class\n    overlayClassName: PropTypes.string,\n\n    // sidebar content to render\n    sidebar: PropTypes.node.isRequired,\n\n    // boolean if sidebar should be docked\n    docked: PropTypes.bool,\n\n    // boolean if sidebar should slide open\n    open: PropTypes.bool,\n\n    // boolean if transitions should be disabled\n    transitions: PropTypes.bool,\n\n    // boolean if touch gestures are enabled\n    touch: PropTypes.bool,\n\n    // max distance from the edge we can start touching\n    touchHandleWidth: PropTypes.number,\n\n    // Place the sidebar on the right\n    pullRight: PropTypes.bool,\n\n    // Enable/Disable sidebar shadow\n    shadow: PropTypes.bool,\n\n    // distance we have to drag the sidebar to toggle open state\n    dragToggleDistance: PropTypes.number,\n\n    // callback called when the overlay is clicked\n    onSetOpen: PropTypes.func,\n\n    // Initial sidebar width when page loads\n    defaultSidebarWidth: PropTypes.number,\n\n    // root component optional id\n    rootId: PropTypes.string,\n\n    // sidebar optional id\n    sidebarId: PropTypes.string,\n\n    // content optional id\n    contentId: PropTypes.string,\n\n    // overlay optional id\n    overlayId: PropTypes.string\n};\n\nSidebar.defaultProps = {\n    docked:true,\n    open: false,\n    transitions: true,\n    touch: true,\n    touchHandleWidth: 20,\n    pullRight: false,\n    shadow: true,\n    dragToggleDistance: 30,\n    onSetOpen: () => {},\n    styles: {},\n    defaultSidebarWidth: 0\n};\n\nexport default Sidebar;","import React from \"react\";\nimport Board from './components/Board';\nimport AddScore from './components/AddScore';\nimport RankList from './components/RankList';\nimport negative_sound from './assets/negative_sound.mp3';\nimport positive_sound from './assets/positive_sound.mp3';\nimport LogFile from './components/LogFile';\nimport Sidebar from './components/Sidebar';\nimport { Redirect } from 'react-router';\nimport {Link} from 'react-router-dom';\n\nclass GamePage extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentKey: '',\n            current_state_row: null,\n            current_state_col:null,\n            end_state_row:null,\n            end_state_col:null,\n            teleportationKey: '',\n            episode_win: null,\n            step: null,\n            round: null,\n            score: null,\n            goal: null,\n            episode_interrupt: null,\n            gamma: null,\n            totalStep: null,\n            crash: false,\n            sidebarOpen: true,\n            keyPressHist: [],\n            // scoreIncrease:false,\n        };\n        this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n    }\n\n    onSetSidebarOpen(open) {\n        this.setState({ sidebarOpen: open });\n    }\n\n    checkEpisodeWin = () => {\n        if (this.state.current_state_row === this.state.end_state_row &&\n            this.state.current_state_col === this.state.end_state_col) {\n            return true\n        } else {\n            return false\n        }\n    };\n\n    next_round_board = () =>{\n        this.setState({\n            current_state_row: 5,\n            current_state_col: 0,\n            episode_win: false,\n            step: 0,\n            round: this.state.round +1,\n        });\n    };\n\n\n    checkCrash = () => {\n        const crashRate = (Math.round((1 - this.state.gamma)*100)/100);\n        if (Math.random() < crashRate) {\n            this.setState({\n                crash: true,\n            });\n        }\n    };\n\n\n    handleKeyPress = (e) =>{\n        if ((e.key === \"ArrowRight\" ||\n            e.key === \"ArrowUp\" ||\n            e.key ===this.state.teleportationKey) ||\n            (((97 <= e.key.charCodeAt(0) &&\n                e.key.charCodeAt(0) <= 122) ||\n                e.key === \"ArrowLeft\" ||\n                e.key === \"ArrowDown\")&&\n                !this.state.keyPressHist.includes(e.key))){\n\n            console.log(e.key.charCodeAt(0));\n            this.setState({\n                currentKey: e.key,\n                step: this.state.step + 1,\n                score: this.state.score - 1,\n                totalStep: this.state.totalStep +1,\n            });\n\n            this.setState(previousState => ({\n                keyPressHist: [...previousState.keyPressHist, e.key]\n            }));\n\n            if (this.state.totalStep >= 1){\n                this.checkCrash();\n            }\n\n            if (e.key === \"ArrowRight\") {\n                if (this.state.current_state_col + 1 <= 5){\n                    this.setState({\n                        current_state_col: this.state.current_state_col + 1,\n                    });\n                }\n                this.checkGameStatus();\n            }else if (e.key === \"ArrowUp\") {\n                if (this.state.current_state_row - 1 >= 0){\n                    this.setState({\n                        current_state_row: this.state.current_state_row - 1\n                    });\n                }\n                this.checkGameStatus();\n            }else if (e.key === this.state.teleportationKey){\n                this.setState({\n                    current_state_row: this.state.end_state_row,\n                    current_state_col: this.state.end_state_col,\n                    episode_win: true,\n                    score: this.state.score + this.state.goal,\n                });\n                // TODO: freeze the function of steps count\n                this.checkGameStatus();\n            }else{\n                if (!this.state.crash){\n                    document.getElementById('negative_sound').play();\n                }\n            }\n        }else{\n\n        }\n\n    };\n\n    checkGameStatus() {\n        if (this.checkEpisodeWin()) {\n            this.setState({\n                episode_win: true,\n                score: this.state.score + this.state.goal,\n            });\n            // setTimeout(()=>this.next_round_board(), 1000);\n            document.getElementById('positive_sound').play();\n\n            let wait = ms => new Promise((r, j) => setTimeout(r, ms));\n            let prom = wait(2000);\n            let show_next_round = () => this.next_round_board();\n            prom.then(show_next_round())\n\n        } else {\n            if (!this.state.crash){\n                document.getElementById('negative_sound').play();\n            }\n        }\n    }\n\n    gameStatus = () =>{\n        return <p>step {this.state.step} / round {this.state.round}</p>\n    };\n\n    showCrashMessage = () =>{\n        this.componentWillUnmount();\n        return <p>Your spaceship crashes, game over, thanks for playing!</p>\n    };\n\n\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n\n        this.setState({\n            current_state_row: 5,\n            current_state_col: 0,\n            end_state_row: 0,\n            end_state_col: 5,\n            teleportationKey: \"p\",\n            episode_win:false,\n            step:0,\n            round:1,\n            goal: 20,\n            score: 0,\n            gamma: 0.94,\n            totalStep: 0,\n            crash: false,\n            sidebarOpen:false,\n        });\n    }\n\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n\n\n    render() {\n        const title = \"Spaceship Adventure\";\n        const instruction1 = \"skill1: try arrow keys to move. Hint: ArrowUp moves your spaceship up.\";\n        const instruction2 = \"skill2: try [a-z] lower case letters to teleport the spaceship, \" +\n            \"so that your spaceship will reach the \" +\n            \"destination in one move\";\n\n        const status = this.gameStatus();\n        console.log(\"get into layout render\");\n\n        return(\n            <div>\n                <Sidebar\n                sidebar={\n                    <div>\n                        {/*<b>Rank list</b>*/}\n                        <RankList totalStep={this.state.totalStep}/>\n                    </div>\n                }\n                open={this.state.sidebarOpen}\n                // onSetOpen={this.onSetSidebarOpen}\n                styles={{ sidebar: { background: \"white\" } }}>\n                {/*<button onClick={() => this.onSetSidebarOpen(true)}>*/}\n                {/*</button>*/}\n                <h1 style={{textAlign:'center'}}>{title}</h1>\n                <h3 style={{paddingLeft: '50px'}} className=\"instruction1\">{instruction1}</h3>\n                <h3 style={{paddingLeft: '50px'}} className=\"instruction2\">{instruction2}</h3>\n                <div style={{paddingLeft: '50px'}} className=\"game_status\">{status}</div>\n                <p style={{paddingLeft: '50px'}}>Your total step: {this.state.totalStep}</p>\n                <p style={{paddingLeft: '50px'}}>There is a {Math.round((1-this.state.gamma)*100)} percent probability that\n                    your spaceship will crash in the next step!\n                </p>\n                {/*<div>{this.state.crash && this.showCrashMessage()}</div>*/}\n                <AddScore\n                    score={this.state.score}\n                />\n                <Board\n                    current_state_row={this.state.current_state_row}\n                    current_state_col={this.state.current_state_col}\n                    end_state_row={this.state.end_state_row}\n                    end_state_col={this.state.end_state_col}\n                />\n                <p style={{paddingLeft:'50px'}}>The key(s) you pressed: {this.state.keyPressHist.map((data) => {\n                    return <li>{data}</li>\n                })\n                }</p>\n                <audio id=\"negative_sound\" src={negative_sound}/>\n                <audio id=\"positive_sound\" src={positive_sound}/>\n                {this.state.crash &&\n                <LogFile keyPressHist={this.state.keyPressHist}/>\n                }\n                {this.state.crash && <Redirect to='/gameOver'/>}\n                </Sidebar>\n\n            </div>\n        );\n    }\n}\n\nexport default GamePage;","/*\n* TODO: game over instruction\n* TODO: logfile\n*\n*\n* */\nimport React, { Component } from 'react';\n\nclass GameOverPage extends Component {\n    render(){\n        return (\n            <div>\n                <p>Your spaceship crashes, game over, thanks for playing</p>\n                <p>Your keystrokes will be logged.</p>\n\n            </div>\n        );\n    }\n}\n\nexport default GameOverPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport IntroPage from './IntroPage';\nimport GamePage from './GamePage'\nimport GameOverPage from './GameOverPage'\n\nclass Routes extends React.Component {\n    render(){\n        return(\n            <HashRouter>\n                <Switch>\n                    <Route exact path='/' component={IntroPage}/>\n                    <Route exact path='/gameOver' component={GameOverPage}/>\n                    <Route exact parh='/main' component={GamePage}/>\n                </Switch>\n            </HashRouter>\n\n        );\n    }\n}\n\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n// ReactDOM.render(<GamePage />, document.getElementById('root'));\n// ReactDOM.render(<IntroPage />, document.getElementById('root'));\n// ReactDOM.render(<GameOverPage/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}